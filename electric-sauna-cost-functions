#!/bin/bash

function __e_request-24h-electricity-data {
  curl -s "$ELECTRICITY_API_ENDPOINT_URL/$1/$1?lang=fi" -H 'Accept: application/json' -H 'Accept-Encoding: gzip, deflate, br' --compressed
}

function __e_get-electricity-24h-data {
  local dataDir="$HOME/.electricity-prices"

  if [[ ! -d "$dataDir" ]]; then
    mkdir -p "$dataDir"
  fi

  if [[ ! -f "$dataDir/$1.json" ]]; then
    __e_request-24h-electricity-data $1 > "$dataDir/$1.json"
  else
    if [[ $(cat "$dataDir/$1.json" | jq 'length') != "24" ]]; then
      __e_request-24h-electricity-data $1 > "$dataDir/$1.json"
    fi
  fi

  cat "$dataDir/$1.json"
}

function __e_add-one-day-to-date {
  if [[ $(uname) == 'Darwin' ]]; then
    date -v+1d -jf "%Y-%m-%d" $1 +%Y-%m-%d
  else
    date -d "$1 +1 day" +%Y-%m-%d
  fi
}

function __e_add-x-hours-to-timestamp {
  if [[ $(uname) == 'Darwin' ]]; then
    date "-v+$1H" -j -f "%Y-%m-%dT%H:%M:%S" "$2T$3:00:00" +%Y-%m-%dT%H:%M:%S
  else
    local timeZone=$(date -d $2 +%z)
    local dateInput="$2T$3:00:00 $timeZone +$1 hours"
    date -d "$dateInput" +%Y-%m-%dT%H:%M:%S
  fi
}

function __e_get-electricity-data {
  local data=$(__e_get-electricity-24h-data $1)
  if [[ $2 -ge "22" ]]; then
    local nextDay=$(__e_add-one-day-to-date $1)
    data='['$data', '$(__e_get-electricity-24h-data $nextDay)']'
  else
    data='['$data']'
  fi

  echo $data | jq 'map(.[])'
}

function __e_filter-requested-and-next-two-hours {
  local filterFirstHour='.timeStamp == "'$(__e_add-x-hours-to-timestamp 0 $1 $2)'"'
  local filterSecondHour='.timeStamp == "'$(__e_add-x-hours-to-timestamp 1 $1 $2)'"'
  local filterThirdHour='.timeStamp == "'$(__e_add-x-hours-to-timestamp 2 $1 $2)'"'
  jq ". | map(. | select($filterFirstHour or $filterSecondHour or $filterThirdHour))"
}

function sauna-get-3h-price {
  local argDate=$1
  local argHour=$2

  if [[ $2 -ge "24" ]]; then
    argDate=$(__e_add-one-day-to-date $1)
    argHour=$(($2 - 24))
  fi

  argHour=$(date -d $argHour +%H)

  echo "* Fetching prices and calculating the cost of running the sauna for 3"
  echo "  hours starting on $argDate at $argHour:00..."
  echo "---------------------------------------------------------------------"
  __e_get-electricity-data $argDate $argHour | \
    __e_filter-requested-and-next-two-hours $argDate $argHour | \
    jq -r '. | "3 hour prices: [\(map(.value) | join(", "))] \(.[0].unit), 3 hour sauna price: \('$SAUNA_POWER_KILOWATTS'*(3*'$ELECTRICITY_TRANSFER_PRICE'+(map(.value*1.24) | add)) | round/100.0) eur"'
}
